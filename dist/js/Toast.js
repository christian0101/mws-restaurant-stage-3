let queue=[];function Toast(e,t,s){const n=this;this.answer=new Promise(function(e){n._answerResolver=e}),this.gone=new Promise(function(e){n._goneResolver=e})}Toast.prototype.create=((e="No message",t=null,s=["dismiss"])=>{const n=new Toast(e,t,s),o=document.createElement("div");o.id="toast",o.className="toast",o.tabIndex="-1";const a=document.createElement("span");if(a.innerHTML=e,a.className="toast-text",o.appendChild(a),s){const e=document.createElement("span");e.className="toast-buttons",s.forEach(t=>{const s=document.createElement("button");s.id=t,s.innerHTML=t,s.className="unbutton",e.appendChild(s)}),o.appendChild(e),e.addEventListener("click",function(e){const t=e.target;t&&(n._answerResolver(t.innerHTML),n.dismiss(o,n))}),e.addEventListener("scroll",function(t){e.scrollLeft>10?a.className="toast-text_scrolled":a.className="toast-text"})}return t&&setTimeout(()=>{n.dismiss(o,n)},1e3*t),queue.push(o),n.show(n),n}),Toast.prototype.show=(e=>{if(!document.getElementById("toast")){const e=queue.shift();document.body.appendChild(e),e.focus()}}),Toast.prototype.dismiss=((e,t)=>(t._answerResolver(),e.classList.add("toast-dismissed"),setTimeout(()=>{e.parentNode.removeChild(e),queue.length>0&&t.show()},450),this.gone));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvYXN0LmpzIl0sIm5hbWVzIjpbInF1ZXVlIiwiVG9hc3QiLCJ0ZXh0IiwiZHVyYXRpb24iLCJidXR0b25zIiwidG9hc3QiLCJ0aGlzIiwiYW5zd2VyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJfYW5zd2VyUmVzb2x2ZXIiLCJnb25lIiwiX2dvbmVSZXNvbHZlciIsInByb3RvdHlwZSIsImNyZWF0ZSIsIm1lc3NhZ2UiLCJ0b2FzdEVsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsImNsYXNzTmFtZSIsInRhYkluZGV4IiwidGV4dEVsZW1lbnQiLCJpbm5lckhUTUwiLCJhcHBlbmRDaGlsZCIsImJ1dHRvbnNFbGVtZW50IiwiZm9yRWFjaCIsImJ1dHRvbiIsInRvYXN0QnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidGFyZ2V0IiwiZGlzbWlzcyIsInNjcm9sbExlZnQiLCJzZXRUaW1lb3V0IiwicHVzaCIsInNob3ciLCJnZXRFbGVtZW50QnlJZCIsIm5vdGlmaWNhdGlvbiIsInNoaWZ0IiwiYm9keSIsImZvY3VzIiwiY2xhc3NMaXN0IiwiYWRkIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiQUFJQSxJQUFJQSxNQUFRLEdBS1osU0FBU0MsTUFBTUMsRUFBTUMsRUFBVUMsR0FDN0IsTUFBTUMsRUFBUUMsS0FFZEEsS0FBS0MsT0FBUyxJQUFJQyxRQUFRLFNBQVNDLEdBQ2pDSixFQUFNSyxnQkFBa0JELElBRzFCSCxLQUFLSyxLQUFPLElBQUlILFFBQVEsU0FBU0MsR0FDL0JKLEVBQU1PLGNBQWdCSCxJQVUxQlIsTUFBTVksVUFBVUMsT0FBUyxFQUFDQyxFQUFVLGFBQWNaLEVBQVcsS0FBTUMsRUFBVSxDQUFDLGNBQzVFLE1BQU1DLEVBQVEsSUFBSUosTUFBTWMsRUFBU1osRUFBVUMsR0FFckNZLEVBQWVDLFNBQVNDLGNBQWMsT0FDNUNGLEVBQWFHLEdBQUssUUFDbEJILEVBQWFJLFVBQVksUUFDekJKLEVBQWFLLFNBQVcsS0FDeEIsTUFBTUMsRUFBY0wsU0FBU0MsY0FBYyxRQUszQyxHQUpBSSxFQUFZQyxVQUFZUixFQUN4Qk8sRUFBWUYsVUFBWSxhQUN4QkosRUFBYVEsWUFBWUYsR0FFckJsQixFQUFTLENBQ1gsTUFBTXFCLEVBQWlCUixTQUFTQyxjQUFjLFFBQzlDTyxFQUFlTCxVQUFZLGdCQUMzQmhCLEVBQVFzQixRQUFTQyxJQUNmLE1BQU1DLEVBQWNYLFNBQVNDLGNBQWMsVUFDM0NVLEVBQVlULEdBQUtRLEVBQ2pCQyxFQUFZTCxVQUFZSSxFQUN4QkMsRUFBWVIsVUFBWSxXQUN4QkssRUFBZUQsWUFBWUksS0FFN0JaLEVBQWFRLFlBQVlDLEdBRXpCQSxFQUFlSSxpQkFBaUIsUUFBUyxTQUFTQyxHQUNoRCxNQUFNSCxFQUFTRyxFQUFNQyxPQUNoQkosSUFDTHRCLEVBQU1LLGdCQUFnQmlCLEVBQU9KLFdBQzdCbEIsRUFBTTJCLFFBQVFoQixFQUFjWCxNQUc5Qm9CLEVBQWVJLGlCQUFpQixTQUFVLFNBQVNDLEdBQzdDTCxFQUFlUSxXQUFhLEdBQzlCWCxFQUFZRixVQUFZLHNCQUV4QkUsRUFBWUYsVUFBWSxlQWM5QixPQVRJakIsR0FDRitCLFdBQVcsS0FDVDdCLEVBQU0yQixRQUFRaEIsRUFBY1gsSUFDaEIsSUFBWEYsR0FHTEgsTUFBTW1DLEtBQUtuQixHQUNYWCxFQUFNK0IsS0FBSy9CLEdBRUpBLElBTVRKLE1BQU1ZLFVBQVV1QixLQUFPLENBQUMvQixJQUN0QixJQUFLWSxTQUFTb0IsZUFBZSxTQUFVLENBQ3JDLE1BQU1DLEVBQWV0QyxNQUFNdUMsUUFDM0J0QixTQUFTdUIsS0FBS2hCLFlBQVljLEdBQzFCQSxFQUFhRyxXQU9qQnhDLE1BQU1ZLFVBQVVtQixRQUFVLEVBQUNoQixFQUFjWCxLQUN2Q0EsRUFBTUssa0JBRU5NLEVBQWEwQixVQUFVQyxJQUFJLG1CQUUzQlQsV0FBVyxLQUNUbEIsRUFBYTRCLFdBQVdDLFlBQVk3QixHQUNoQ2hCLE1BQU04QyxPQUFTLEdBQ2pCekMsRUFBTStCLFFBRVAsS0FFSTlCLEtBQUtLIiwiZmlsZSI6IlRvYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUb2FzdCBub3RpZmljYXRpb25zLlxuICovXG5cbmxldCBxdWV1ZSA9IFtdO1xuXG4vKipcbiAqIFRvYXN0IG50aWZpY2F0aW9uIGNvbnRydWN0b3IuXG4gKi9cbmZ1bmN0aW9uIFRvYXN0KHRleHQsIGR1cmF0aW9uLCBidXR0b25zKSB7XG4gIGNvbnN0IHRvYXN0ID0gdGhpcztcblxuICB0aGlzLmFuc3dlciA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcbiAgICB0b2FzdC5fYW5zd2VyUmVzb2x2ZXIgPSByZXNvbHZlO1xuICB9KTtcblxuICB0aGlzLmdvbmUgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlKSB7XG4gICAgdG9hc3QuX2dvbmVSZXNvbHZlciA9IHJlc29sdmU7XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZSB0b2FzdCBub3RpZmljYXRpb24uXG4gKiBAcGFyYW0gbWVzc2FnZSB0ZXh0IG1lc3NhZ2UgdG8gZGlzcGxheVxuICogQHBhcmFtIGR1cmF0aW9uIHRpbWUgaW4gc2Vjb25kcyBiZWZvcmUgZGlzbWlzc2luZ1xuICogQHBhcmFtIGJ1dHRvbnMgYXJyYXkgb2YgYnV0dG9uc1xuICovXG5Ub2FzdC5wcm90b3R5cGUuY3JlYXRlID0gKG1lc3NhZ2UgPSAnTm8gbWVzc2FnZScsIGR1cmF0aW9uID0gbnVsbCwgYnV0dG9ucyA9IFsnZGlzbWlzcyddKSA9PiB7XG4gIGNvbnN0IHRvYXN0ID0gbmV3IFRvYXN0KG1lc3NhZ2UsIGR1cmF0aW9uLCBidXR0b25zKTtcblxuICBjb25zdCB0b2FzdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdG9hc3RFbGVtZW50LmlkID0gJ3RvYXN0JztcbiAgdG9hc3RFbGVtZW50LmNsYXNzTmFtZSA9ICd0b2FzdCc7XG4gIHRvYXN0RWxlbWVudC50YWJJbmRleCA9ICctMSc7XG4gIGNvbnN0IHRleHRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICB0ZXh0RWxlbWVudC5pbm5lckhUTUwgPSBtZXNzYWdlO1xuICB0ZXh0RWxlbWVudC5jbGFzc05hbWUgPSAndG9hc3QtdGV4dCc7XG4gIHRvYXN0RWxlbWVudC5hcHBlbmRDaGlsZCh0ZXh0RWxlbWVudCk7XG5cbiAgaWYgKGJ1dHRvbnMpIHtcbiAgICBjb25zdCBidXR0b25zRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICBidXR0b25zRWxlbWVudC5jbGFzc05hbWUgPSAndG9hc3QtYnV0dG9ucydcbiAgICBidXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgY29uc3QgdG9hc3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgIHRvYXN0QnV0dG9uLmlkID0gYnV0dG9uO1xuICAgICAgdG9hc3RCdXR0b24uaW5uZXJIVE1MID0gYnV0dG9uO1xuICAgICAgdG9hc3RCdXR0b24uY2xhc3NOYW1lID0gJ3VuYnV0dG9uJztcbiAgICAgIGJ1dHRvbnNFbGVtZW50LmFwcGVuZENoaWxkKHRvYXN0QnV0dG9uKTtcbiAgICB9KTtcbiAgICB0b2FzdEVsZW1lbnQuYXBwZW5kQ2hpbGQoYnV0dG9uc0VsZW1lbnQpO1xuXG4gICAgYnV0dG9uc0VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgY29uc3QgYnV0dG9uID0gZXZlbnQudGFyZ2V0O1xuICAgICAgaWYgKCFidXR0b24pIHJldHVybjtcbiAgICAgIHRvYXN0Ll9hbnN3ZXJSZXNvbHZlcihidXR0b24uaW5uZXJIVE1MKTtcbiAgICAgIHRvYXN0LmRpc21pc3ModG9hc3RFbGVtZW50LCB0b2FzdCk7XG4gICAgfSk7XG5cbiAgICBidXR0b25zRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgaWYgKGJ1dHRvbnNFbGVtZW50LnNjcm9sbExlZnQgPiAxMCkge1xuICAgICAgICB0ZXh0RWxlbWVudC5jbGFzc05hbWUgPSAndG9hc3QtdGV4dF9zY3JvbGxlZCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0ZXh0RWxlbWVudC5jbGFzc05hbWUgPSAndG9hc3QtdGV4dCc7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBpZiAoZHVyYXRpb24pIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRvYXN0LmRpc21pc3ModG9hc3RFbGVtZW50LCB0b2FzdCk7XG4gICAgfSwgZHVyYXRpb24gKiAxMDAwKTtcbiAgfVxuXG4gIHF1ZXVlLnB1c2godG9hc3RFbGVtZW50KTtcbiAgdG9hc3Quc2hvdyh0b2FzdCk7XG5cbiAgcmV0dXJuIHRvYXN0O1xufVxuXG4vKipcbiAqIERpc3BsYXkgdG9hc3Qgbm90aWZpY2F0aW9uIGZyb20gcXVldWUuXG4gKi9cblRvYXN0LnByb3RvdHlwZS5zaG93ID0gKHRvYXN0KSA9PiB7XG4gIGlmICghZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvYXN0JykpIHtcbiAgICBjb25zdCBub3RpZmljYXRpb24gPSBxdWV1ZS5zaGlmdCgpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobm90aWZpY2F0aW9uKTtcbiAgICBub3RpZmljYXRpb24uZm9jdXMoKTtcbiAgfVxufVxuXG4vKipcbiAqIERpc21pc3MgdG9hc3Qgbm90aWZpY2F0aW9uLlxuICovXG5Ub2FzdC5wcm90b3R5cGUuZGlzbWlzcyA9ICh0b2FzdEVsZW1lbnQsIHRvYXN0KSA9PiB7XG4gIHRvYXN0Ll9hbnN3ZXJSZXNvbHZlcigpO1xuXG4gIHRvYXN0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCd0b2FzdC1kaXNtaXNzZWQnKTtcblxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICB0b2FzdEVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0b2FzdEVsZW1lbnQpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPiAwKSB7XG4gICAgICB0b2FzdC5zaG93KCk7XG4gICAgfVxuICB9LCA0NTApO1xuXG4gIHJldHVybiB0aGlzLmdvbmU7XG59XG4iXX0=
