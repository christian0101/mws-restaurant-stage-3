let restaurants,neighborhoods,cuisines;var map,markers=[];document.addEventListener("DOMContentLoaded",e=>{DBHelper.registerServiceWorker(),this._toastsView=new Toast,fetchNeighborhoods(),fetchCuisines(),updateRestaurants()}),showNotification=((e,t={buttons:["dismiss"]})=>{this._toastsView.create(e,t)}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e&&(showNotification(e),!t)||(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e&&(showNotification(e),!t)||(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),self.restaurants&&addMarkersToMap()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,a=t.selectedIndex,n=e[s].value,r=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(n,r,(e,t)=>{e&&(showNotification(e),!t)||(resetRestaurants(t),fillRestaurantsHTML(),Helper.lazyLoad())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))})}),createRestaurantHTML=(e=>{const t=document.createElement("li"),s=DBHelper.imageUrlForRestaurant(e,!0),a=document.createElement("img");a.className="restaurant-img",a.classList.add("lazy"),a.src=s,a.setAttribute("data-src",DBHelper.imageUrlForRestaurant(e)),a.setAttribute("data-srcset",DBHelper.imageSRCSetUrlsForRestaurant(e,["1x","2x"])),a.alt=e.photograph?DBHelper.getPhotoDescription(e):"no picture found",t.append(a);const n=document.createElement("h3");n.innerHTML=e.name,n.title="restaurant name",t.append(n);const r=document.createElement("p");r.innerHTML=e.neighborhood,r.title="restaurant neighborhood",t.append(r);const o=document.createElement("p");o.innerHTML=e.address,o.title="restaurant address",t.append(o);const i=document.createElement("a");return i.innerHTML=`View More about ${e.name}`,i.title=`More details about the resturant ${e.name}`,i.href=DBHelper.urlForRestaurant(e),t.append(i),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsicmVzdGF1cmFudHMiLCJuZWlnaGJvcmhvb2RzIiwiY3Vpc2luZXMiLCJtYXAiLCJtYXJrZXJzIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJEQkhlbHBlciIsInJlZ2lzdGVyU2VydmljZVdvcmtlciIsInRoaXMiLCJfdG9hc3RzVmlldyIsIlRvYXN0IiwiZmV0Y2hOZWlnaGJvcmhvb2RzIiwiZmV0Y2hDdWlzaW5lcyIsInVwZGF0ZVJlc3RhdXJhbnRzIiwic2hvd05vdGlmaWNhdGlvbiIsIm1zZyIsIm9wdGlvbnMiLCJidXR0b25zIiwiY3JlYXRlIiwiZXJyb3IiLCJzZWxmIiwiZmlsbE5laWdoYm9yaG9vZHNIVE1MIiwic2VsZWN0IiwiZ2V0RWxlbWVudEJ5SWQiLCJmb3JFYWNoIiwibmVpZ2hib3Job29kIiwib3B0aW9uIiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsInZhbHVlIiwiYXBwZW5kIiwiZmlsbEN1aXNpbmVzSFRNTCIsImN1aXNpbmUiLCJ3aW5kb3ciLCJpbml0TWFwIiwiZ29vZ2xlIiwibWFwcyIsIk1hcCIsInpvb20iLCJjZW50ZXIiLCJsYXQiLCJsbmciLCJzY3JvbGx3aGVlbCIsImFkZE1hcmtlcnNUb01hcCIsImNTZWxlY3QiLCJuU2VsZWN0IiwiY0luZGV4Iiwic2VsZWN0ZWRJbmRleCIsIm5JbmRleCIsImZldGNoUmVzdGF1cmFudEJ5Q3Vpc2luZUFuZE5laWdoYm9yaG9vZCIsInJlc2V0UmVzdGF1cmFudHMiLCJmaWxsUmVzdGF1cmFudHNIVE1MIiwiSGVscGVyIiwibGF6eUxvYWQiLCJtIiwic2V0TWFwIiwidWwiLCJyZXN0YXVyYW50IiwiY3JlYXRlUmVzdGF1cmFudEhUTUwiLCJsaSIsImltZ1NyYyIsImltYWdlVXJsRm9yUmVzdGF1cmFudCIsImltYWdlIiwiY2xhc3NOYW1lIiwiY2xhc3NMaXN0IiwiYWRkIiwic3JjIiwic2V0QXR0cmlidXRlIiwiaW1hZ2VTUkNTZXRVcmxzRm9yUmVzdGF1cmFudCIsImFsdCIsImdldFBob3RvRGVzY3JpcHRpb24iLCJuYW1lIiwidGl0bGUiLCJhZGRyZXNzIiwibW9yZSIsImhyZWYiLCJ1cmxGb3JSZXN0YXVyYW50IiwibWFya2VyIiwibWFwTWFya2VyRm9yUmVzdGF1cmFudCIsImFkZExpc3RlbmVyIiwibG9jYXRpb24iLCJ1cmwiLCJwdXNoIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxZQUNGQyxjQUNBQyxTQUNGLElBQUlDLElBQ0FDLFFBQVUsR0FLZEMsU0FBU0MsaUJBQWlCLG1CQUFxQkMsSUFDN0NDLFNBQVNDLHdCQUNUQyxLQUFLQyxZQUFjLElBQUlDLE1BQ3ZCQyxxQkFDQUMsZ0JBQ0FDLHNCQU1EQyxpQkFBbUIsRUFBQ0MsRUFBS0MsRUFBVSxDQUFDQyxRQUFTLENBQUMsZUFDNUNULEtBQUtDLFlBQVlTLE9BQU9ILEVBQUtDLEtBTWhDTCxtQkFBcUIsTUFDbkJMLFNBQVNLLG1CQUFtQixDQUFDUSxFQUFPcEIsS0FDOUJvQixJQUNGTCxpQkFBaUJLLElBQ1pwQixLQUlQcUIsS0FBS3JCLGNBQWdCQSxFQUNyQnNCLDZCQU9KQSxzQkFBd0IsRUFBQ3RCLEVBQWdCcUIsS0FBS3JCLGlCQUM1QyxNQUFNdUIsRUFBU25CLFNBQVNvQixlQUFlLHdCQUN2Q3hCLEVBQWN5QixRQUFRQyxJQUNwQixNQUFNQyxFQUFTdkIsU0FBU3dCLGNBQWMsVUFDdENELEVBQU9FLFVBQVlILEVBQ25CQyxFQUFPRyxNQUFRSixFQUNmSCxFQUFPUSxPQUFPSixPQU9sQmQsY0FBZ0IsTUFDZE4sU0FBU00sY0FBYyxDQUFDTyxFQUFPbkIsS0FDekJtQixJQUNGTCxpQkFBaUJLLElBQ1puQixLQUlQb0IsS0FBS3BCLFNBQVdBLEVBQ2hCK0Isd0JBT0pBLGlCQUFtQixFQUFDL0IsRUFBV29CLEtBQUtwQixZQUNsQyxNQUFNc0IsRUFBU25CLFNBQVNvQixlQUFlLG1CQUV2Q3ZCLEVBQVN3QixRQUFRUSxJQUNmLE1BQU1OLEVBQVN2QixTQUFT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InNvdXJjZXNDb250ZW50IjpbImxldCByZXN0YXVyYW50cyxcclxuICBuZWlnaGJvcmhvb2RzLFxyXG4gIGN1aXNpbmVzXHJcbnZhciBtYXBcclxudmFyIG1hcmtlcnMgPSBbXVxyXG5cclxuLyoqXHJcbiAqIEZldGNoIGRhdGEgYXMgc29vbiBhcyB0aGUgcGFnZSBpcyBsb2FkZWQuXHJcbiAqL1xyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKGV2ZW50KSA9PiB7XHJcbiAgREJIZWxwZXIucmVnaXN0ZXJTZXJ2aWNlV29ya2VyKCk7XHJcbiAgdGhpcy5fdG9hc3RzVmlldyA9IG5ldyBUb2FzdCgpO1xyXG4gIGZldGNoTmVpZ2hib3Job29kcygpO1xyXG4gIGZldGNoQ3Vpc2luZXMoKTtcclxuICB1cGRhdGVSZXN0YXVyYW50cygpO1xyXG59KTtcclxuXHJcbi8qKlxyXG4gKiBEaXNwbGF5IG5vdGlmaWNhdGlvbnMuXHJcbiAqL1xyXG4gc2hvd05vdGlmaWNhdGlvbiA9IChtc2csIG9wdGlvbnMgPSB7YnV0dG9uczogWydkaXNtaXNzJ119KSA9PiB7XHJcbiAgIHRoaXMuX3RvYXN0c1ZpZXcuY3JlYXRlKG1zZywgb3B0aW9ucyk7XHJcbiB9XHJcblxyXG4vKipcclxuICogRmV0Y2ggYWxsIG5laWdoYm9yaG9vZHMgYW5kIHNldCB0aGVpciBIVE1MLlxyXG4gKi9cclxuZmV0Y2hOZWlnaGJvcmhvb2RzID0gKCkgPT4ge1xyXG4gIERCSGVscGVyLmZldGNoTmVpZ2hib3Job29kcygoZXJyb3IsIG5laWdoYm9yaG9vZHMpID0+IHtcclxuICAgIGlmIChlcnJvcikgeyAvLyBHb3QgYW4gZXJyb3JcclxuICAgICAgc2hvd05vdGlmaWNhdGlvbihlcnJvcik7XHJcbiAgICAgIGlmICghbmVpZ2hib3Job29kcykge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgc2VsZi5uZWlnaGJvcmhvb2RzID0gbmVpZ2hib3Job29kcztcclxuICAgIGZpbGxOZWlnaGJvcmhvb2RzSFRNTCgpO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vKipcclxuICogU2V0IG5laWdoYm9yaG9vZHMgSFRNTC5cclxuICovXHJcbmZpbGxOZWlnaGJvcmhvb2RzSFRNTCA9IChuZWlnaGJvcmhvb2RzID0gc2VsZi5uZWlnaGJvcmhvb2RzKSA9PiB7XHJcbiAgY29uc3Qgc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25laWdoYm9yaG9vZHMtc2VsZWN0Jyk7XHJcbiAgbmVpZ2hib3Job29kcy5mb3JFYWNoKG5laWdoYm9yaG9vZCA9PiB7XHJcbiAgICBjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcclxuICAgIG9wdGlvbi5pbm5lckhUTUwgPSBuZWlnaGJvcmhvb2Q7XHJcbiAgICBvcHRpb24udmFsdWUgPSBuZWlnaGJvcmhvb2Q7XHJcbiAgICBzZWxlY3QuYXBwZW5kKG9wdGlvbik7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBGZXRjaCBhbGwgY3Vpc2luZXMgYW5kIHNldCB0aGVpciBIVE1MLlxyXG4gKi9cclxuZmV0Y2hDdWlzaW5lcyA9ICgpID0+IHtcclxuICBEQkhlbHBlci5mZXRjaEN1aXNpbmVzKChlcnJvciwgY3Vpc2luZXMpID0+IHtcclxuICAgIGlmIChlcnJvcikgeyAvLyBHb3QgYW4gZXJyb3IhXHJcbiAgICAgIHNob3dOb3RpZmljYXRpb24oZXJyb3IpO1xyXG4gICAgICBpZiAoIWN1aXNpbmVzKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBzZWxmLmN1aXNpbmVzID0gY3Vpc2luZXM7XHJcbiAgICBmaWxsQ3Vpc2luZXNIVE1MKCk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTZXQgY3Vpc2luZXMgSFRNTC5cclxuICovXHJcbmZpbGxDdWlzaW5lc0hUTUwgPSAoY3Vpc2luZXMgPSBzZWxmLmN1aXNpbmVzKSA9PiB7XHJcbiAgY29uc3Qgc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1aXNpbmVzLXNlbGVjdCcpO1xyXG5cclxuICBjdWlzaW5lcy5mb3JFYWNoKGN1aXNpbmUgPT4ge1xyXG4gICAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XHJcbiAgICBvcHRpb24uaW5uZXJIVE1MID0gY3Vpc2luZTtcclxuICAgIG9wdGlvbi52YWx1ZSA9IGN1aXNpbmU7XHJcbiAgICBzZWxlY3QuYXBwZW5kKG9wdGlvbik7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbml0aWFsaXplIEdvb2dsZSBtYXAsIGNhbGxlZCBmcm9tIEhUTUwuXHJcbiAqL1xyXG53aW5kb3cuaW5pdE1hcCA9ICgpID0+IHtcclxuICBsZXQgbG9jID0ge1xyXG4gICAgbGF0OiA0MC43MjIyMTYsXHJcbiAgICBsbmc6IC03My45ODc1MDFcclxuICB9O1xyXG4gIHNlbGYubWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHtcclxuICAgIHpvb206IDEyLFxyXG4gICAgY2VudGVyOiBsb2MsXHJcbiAgICBzY3JvbGx3aGVlbDogZmFsc2VcclxuICB9KTtcclxuXHJcbiAgaWYgKHNlbGYucmVzdGF1cmFudHMpIHtcclxuICAgIGFkZE1hcmtlcnNUb01hcCgpO1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFVwZGF0ZSBwYWdlIGFuZCBtYXAgZm9yIGN1cnJlbnQgcmVzdGF1cmFudHMuXHJcbiAqL1xyXG51cGRhdGVSZXN0YXVyYW50cyA9ICgpID0+IHtcclxuICBjb25zdCBjU2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1aXNpbmVzLXNlbGVjdCcpO1xyXG4gIGNvbnN0IG5TZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmVpZ2hib3Job29kcy1zZWxlY3QnKTtcclxuXHJcbiAgY29uc3QgY0luZGV4ID0gY1NlbGVjdC5zZWxlY3RlZEluZGV4O1xyXG4gIGNvbnN0IG5JbmRleCA9IG5TZWxlY3Quc2VsZWN0ZWRJbmRleDtcclxuXHJcbiAgY29uc3QgY3Vpc2luZSA9IGNTZWxlY3RbY0luZGV4XS52YWx1ZTtcclxuICBjb25zdCBuZWlnaGJvcmhvb2QgPSBuU2VsZWN0W25JbmRleF0udmFsdWU7XHJcblxyXG4gIERCSGVscGVyLmZldGNoUmVzdGF1cmFudEJ5Q3Vpc2luZUFuZE5laWdoYm9yaG9vZChjdWlzaW5lLCBuZWlnaGJvcmhvb2QsIChlcnJvciwgcmVzdGF1cmFudHMpID0+IHtcclxuICAgIGlmIChlcnJvcikgeyAvLyBHb3QgYW4gZXJyb3IhXHJcbiAgICAgIHNob3dOb3RpZmljYXRpb24oZXJyb3IpO1xyXG4gICAgICBpZiAoIXJlc3RhdXJhbnRzKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVzZXRSZXN0YXVyYW50cyhyZXN0YXVyYW50cyk7XHJcbiAgICBmaWxsUmVzdGF1cmFudHNIVE1MKCk7XHJcbiAgICBIZWxwZXIubGF6eUxvYWQoKTtcclxuICB9KVxyXG59XHJcblxyXG4vKipcclxuICogQ2xlYXIgY3VycmVudCByZXN0YXVyYW50cywgdGhlaXIgSFRNTCBhbmQgcmVtb3ZlIHRoZWlyIG1hcCBtYXJrZXJzLlxyXG4gKi9cclxucmVzZXRSZXN0YXVyYW50cyA9IChyZXN0YXVyYW50cykgPT4ge1xyXG4gIC8vIFJlbW92ZSBhbGwgcmVzdGF1cmFudHNcclxuICBzZWxmLnJlc3RhdXJhbnRzID0gW107XHJcbiAgY29uc3QgdWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudHMtbGlzdCcpO1xyXG4gIHVsLmlubmVySFRNTCA9ICcnO1xyXG5cclxuICAvLyBSZW1vdmUgYWxsIG1hcCBtYXJrZXJzXHJcbiAgc2VsZi5tYXJrZXJzLmZvckVhY2gobSA9PiBtLnNldE1hcChudWxsKSk7XHJcbiAgc2VsZi5tYXJrZXJzID0gW107XHJcbiAgc2VsZi5yZXN0YXVyYW50cyA9IHJlc3RhdXJhbnRzO1xyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGFsbCByZXN0YXVyYW50cyBIVE1MIGFuZCBhZGQgdGhlbSB0byB0aGUgd2VicGFnZS5cclxuICovXHJcbmZpbGxSZXN0YXVyYW50c0hUTUwgPSAocmVzdGF1cmFudHMgPSBzZWxmLnJlc3RhdXJhbnRzKSA9PiB7XHJcbiAgY29uc3QgdWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudHMtbGlzdCcpO1xyXG4gIHJlc3RhdXJhbnRzLmZvckVhY2gocmVzdGF1cmFudCA9PiB7XHJcbiAgICB1bC5hcHBlbmQoY3JlYXRlUmVzdGF1cmFudEhUTUwocmVzdGF1cmFudCkpO1xyXG4gIH0pO1xyXG4gIC8vYWRkTWFya2Vyc1RvTWFwKCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgcmVzdGF1cmFudCBIVE1MLlxyXG4gKi9cclxuY3JlYXRlUmVzdGF1cmFudEhUTUwgPSAocmVzdGF1cmFudCkgPT4ge1xyXG4gIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcclxuXHJcbiAgY29uc3QgaW1nU3JjID0gREJIZWxwZXIuaW1hZ2VVcmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQsIHRydWUpO1xyXG4gIGNvbnN0IGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcbiAgaW1hZ2UuY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnQtaW1nJztcclxuICBpbWFnZS5jbGFzc0xpc3QuYWRkKCdsYXp5Jyk7XHJcbiAgaW1hZ2Uuc3JjID0gaW1nU3JjO1xyXG4gIGltYWdlLnNldEF0dHJpYnV0ZSgnZGF0YS1zcmMnLCBEQkhlbHBlci5pbWFnZVVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCkpO1xyXG4gIGltYWdlLnNldEF0dHJpYnV0ZSgnZGF0YS1zcmNzZXQnLCBEQkhlbHBlci5pbWFnZVNSQ1NldFVybHNGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQsIFsnMXgnLCAnMngnXSkpO1xyXG4gIGltYWdlLmFsdCA9IChyZXN0YXVyYW50LnBob3RvZ3JhcGgpID8gREJIZWxwZXIuZ2V0UGhvdG9EZXNjcmlwdGlvbihyZXN0YXVyYW50KSA6XHJcbiAgJ25vIHBpY3R1cmUgZm91bmQnO1xyXG4gIGxpLmFwcGVuZChpbWFnZSk7XHJcblxyXG4gIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xyXG4gIG5hbWUuaW5uZXJIVE1MID0gcmVzdGF1cmFudC5uYW1lO1xyXG4gIG5hbWUudGl0bGUgPSAncmVzdGF1cmFudCBuYW1lJztcclxuICBsaS5hcHBlbmQobmFtZSk7XHJcblxyXG4gIGNvbnN0IG5laWdoYm9yaG9vZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICBuZWlnaGJvcmhvb2QuaW5uZXJIVE1MID0gcmVzdGF1cmFudC5uZWlnaGJvcmhvb2Q7XHJcbiAgbmVpZ2hib3Job29kLnRpdGxlID0gJ3Jlc3RhdXJhbnQgbmVpZ2hib3Job29kJztcclxuICBsaS5hcHBlbmQobmVpZ2hib3Job29kKTtcclxuXHJcbiAgY29uc3QgYWRkcmVzcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICBhZGRyZXNzLmlubmVySFRNTCA9IHJlc3RhdXJhbnQuYWRkcmVzcztcclxuICBhZGRyZXNzLnRpdGxlID0gJ3Jlc3RhdXJhbnQgYWRkcmVzcyc7XHJcbiAgbGkuYXBwZW5kKGFkZHJlc3MpO1xyXG5cclxuICBjb25zdCBtb3JlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gIG1vcmUuaW5uZXJIVE1MID0gYFZpZXcgTW9yZSBhYm91dCAke3Jlc3RhdXJhbnQubmFtZX1gO1xyXG4gIG1vcmUudGl0bGUgPSBgTW9yZSBkZXRhaWxzIGFib3V0IHRoZSByZXN0dXJhbnQgJHtyZXN0YXVyYW50Lm5hbWV9YDtcclxuICBtb3JlLmhyZWYgPSBEQkhlbHBlci51cmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpO1xyXG4gIGxpLmFwcGVuZChtb3JlKVxyXG5cclxuICByZXR1cm4gbGlcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCBtYXJrZXJzIGZvciBjdXJyZW50IHJlc3RhdXJhbnRzIHRvIHRoZSBtYXAuXHJcbiAqL1xyXG5hZGRNYXJrZXJzVG9NYXAgPSAocmVzdGF1cmFudHMgPSBzZWxmLnJlc3RhdXJhbnRzKSA9PiB7XHJcbiAgcmVzdGF1cmFudHMuZm9yRWFjaChyZXN0YXVyYW50ID0+IHtcclxuICAgIC8vIEFkZCBtYXJrZXIgdG8gdGhlIG1hcFxyXG4gICAgY29uc3QgbWFya2VyID0gREJIZWxwZXIubWFwTWFya2VyRm9yUmVzdGF1cmFudChyZXN0YXVyYW50LCBzZWxmLm1hcCk7XHJcbiAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcihtYXJrZXIsICdjbGljaycsICgpID0+IHtcclxuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBtYXJrZXIudXJsXHJcbiAgICB9KTtcclxuXHJcbiAgICBzZWxmLm1hcmtlcnMucHVzaChtYXJrZXIpO1xyXG4gIH0pO1xyXG59XHJcbiJdfQ==
