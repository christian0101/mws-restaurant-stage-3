let restaurant,reviews;var map;document.addEventListener("DOMContentLoaded",e=>{DBHelper.registerServiceWorker(),this._toastsView=new Toast,fetchRestaurantFromURL()}),window.initMap=(()=>{self.restaurant&&(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:self.restaurant.latlng,scrollwheel:!1}),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))}),fetchRestaurantFromURL=(()=>{if(self.restaurant)return;const e=getParameterByName("id");if(e)DBHelper.fetchDataById("restaurants",e,(t,n)=>{if(self.restaurant=n,!t||n)DBHelper.fetchReviewsByRestaurantId(e,(e,t)=>{if(self.reviews=t.reverse(),e){this._toastsView.create(e)}fillRestaurantHTML(),Helper.lazyLoad()});else{this._toastsView.create(t)}});else{this._toastsView.create("No restaurant id in URL")}}),fillRestaurantHTML=((e=self.restaurant)=>{fillBreadcrumb();const t=document.getElementsByTagName("head")[0],n=document.createElement("meta");n.setAttribute("name","description"),n.setAttribute("content",`Detailed information about ${e.name}`),t.append(n);const a=document.getElementById("restaurant-name");a.innerHTML=e.name,a.title="restaurant name";const r=document.getElementById("restaurant-address");r.innerHTML=e.address,r.title="restaurant address";const i=DBHelper.imageUrlForRestaurant(e,!0),s=document.getElementById("restaurant-img");s.className="restaurant-img",s.classList.add("lazy"),s.src=i,s.setAttribute("data-src",DBHelper.imageUrlForRestaurant(e)),s.setAttribute("data-srcset",DBHelper.imageSRCSetUrlsForRestaurant(e,["1x","2x"])),s.alt=e.photograph?DBHelper.getPhotoDescription(e):"no picture found";const l=document.getElementById("restaurant-cuisine");l.innerHTML=e.cuisine_type,l.title="restaurant cuisine type",e.operating_hours&&fillRestaurantHoursHTML(),fillSubmitReviewFormHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,r.className="openhours-day",a.appendChild(r);const i=document.createElement("td");i.innerHTML=e[n],i.className="openhours-time",a.appendChild(i),t.appendChild(a)}}),fillReviewsHTML=((e=self.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h3");if(n.innerHTML="Reviews",t.appendChild(n),0===e.length){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const a=document.getElementById("reviews-list");e.forEach(e=>{a.appendChild(createReviewHTML(e))}),t.appendChild(a)}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,n.className="review-name",n.title="reviewer's name",t.appendChild(n);const a=document.createElement("p"),r=new Date(e.createdAt).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});a.innerHTML=r,a.className="review-date",a.title="date when review was posted",t.appendChild(a);const i=document.createElement("p");i.innerHTML=`Rating: ${e.rating}`,i.className="review-rating",i.title="given rating",t.appendChild(i);const s=document.createElement("p");return s.innerHTML=e.comments,s.className="review-comments",s.title="comments from the reviewer",t.appendChild(s),t}),fillSubmitReviewFormHTML=((e=self.restaurant)=>{const t=document.getElementById("reviews-list"),n=document.createElement("li"),a=document.createElement("form");a.method="POST",a.setAttribute("aria-label","Add review for restaurant");const r=document.createElement("input");r.id="restaurant id",r.name="restaurant_id",r.type="hidden",r.value=e.id,a.appendChild(r);const i=document.createElement("p");i.className="review-name";const s=document.createElement("label");s.innerHTML="* Name:",s.for="uName",s.title="reviewer's name",i.appendChild(s);const l=document.createElement("input");l.id="uName",l.name="name",l.placeholder="Your Name",l.setAttribute("aria-required","true"),l.setAttribute("aria-label","Your name"),s.appendChild(l),a.appendChild(i);const m=document.createElement("p"),d=(new Date).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});m.innerHTML=d,m.className="review-date",m.title="date when review is posted",a.appendChild(m);const o=document.createElement("p");o.className="review-rating";const c=document.createElement("label");c.innerHTML="Rating:";const u=document.createElement("select");u.name="rating";for(var p=1;p<=5;p++){const e=document.createElement("option");e.value=p,e.innerHTML=p,u.appendChild(e)}c.appendChild(u),o.appendChild(c),a.appendChild(o);const h=document.createElement("p");h.className="review-comments";const w=document.createElement("label");w.innerHTML="* Comments:";const g=document.createElement("textarea");g.name="comments",g.id="commentsText",g.setAttribute("aria-required","true"),g.setAttribute("aria-label","Additional comments for the review"),h.appendChild(w),h.appendChild(g),a.appendChild(h);const f=document.createElement("p"),v=document.createElement("button");v.id="submitBtn",v.type="submit",v.innerHTML="Submit Review!",v.value="Submit",v.setAttribute("aria-label","Submit review"),f.appendChild(v),a.appendChild(f),n.appendChild(a),t.appendChild(n)}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.setAttribute("aria-current","page"),n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
