let restaurant,reviews;var map;document.addEventListener("DOMContentLoaded",e=>{DBHelper.registerServiceWorker(),this._dbPromise=DBHelper.openDatabase(),this._toastsView=new Toast,fetchRestaurantFromURL()}),showNotification=((e,t,n)=>{this._toastsView.create(e,t,n)}),window.initMap=(()=>{self.restaurant&&(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:self.restaurant.latlng,scrollwheel:!1}),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))}),fetchRestaurantFromURL=(()=>{if(self.restaurant)return;const e=getParameterByName("id");e?(DBHelper.fetchDataById("restaurants",e,this._dbPromise,(e,t,n)=>{self.restaurant=n,e?showNotification(e):(t&&showNotification(t),fillRestaurantHTML(),Helper.lazyLoad())}),DBHelper.fetchReviewsByRestaurantId(e,this._dbPromise,(e,t,n)=>{e?(showNotification(e),fillReviewsHTML()):t&&showNotification(t),resetReviews(n),fillReviewsHTML()})):showNotification("No restaurant id in URL")}),resetReviews=(e=>{self.reviews=[],document.getElementById("reviews-list").innerHTML="",self.reviews=e}),fillRestaurantHTML=((e=self.restaurant)=>{fillBreadcrumb();const t=document.getElementsByTagName("head")[0],n=document.createElement("meta");n.setAttribute("name","description"),n.setAttribute("content",`Detailed information about ${e.name}`),t.append(n);const a=document.getElementById("restaurant-name");a.innerHTML=e.name,a.title="restaurant name";const r=document.createElement("input");r.type="checkbox",r.name="favourite",r.value="favourite",r.id="favourite",r.checked=e.is_favorite,r.setAttribute("onchange","updateIsFavourite()");const i=document.createElement("label");i.setAttribute("for","favourite"),a.appendChild(r),a.appendChild(i);const s=document.getElementById("restaurant-address");s.innerHTML=e.address,s.title="restaurant address";const o=DBHelper.imageUrlForRestaurant(e,!0),l=document.getElementById("restaurant-img");l.className="restaurant-img",l.classList.add("lazy"),l.src=o,l.setAttribute("data-src",DBHelper.imageUrlForRestaurant(e)),l.setAttribute("data-srcset",DBHelper.imageSRCSetUrlsForRestaurant(e,["1x","2x"])),l.alt=e.photograph?DBHelper.getPhotoDescription(e):"no picture found";const c=document.getElementById("restaurant-cuisine");c.innerHTML=e.cuisine_type,c.title="restaurant cuisine type",e.operating_hours&&fillRestaurantHoursHTML()}),updateIsFavourite=((e=self.restaurant)=>{const t=e.is_favorite?0:1,n=(new Date).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"}),a={restaurant_id:e.id,is_favorite:parseInt(t),createdAt:n};sendData(a).then(e=>{saveLocally()})}),sendData=(e=>DBHelper._updateDB("newIsFavourite",e).then(()=>navigator.serviceWorker.ready).then(e=>e.sync.register("send-isFavourite")).then(()=>{showNotification(`Restaurant is ${e.is_favorite?"favourite now :)":"not favourite anymore :("}`,1.5)}).catch(()=>{showNotification("Oops! Something went wrong.",3)})),saveLocally=((e=self.restaurant)=>(e.is_favorite=!e.is_favorite,DBHelper._updateDB("restaurants",e).then(()=>{}))),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");t.innerHTML="";for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,r.className="openhours-day",a.appendChild(r);const i=document.createElement("td");i.innerHTML=e[n],i.className="openhours-time",a.appendChild(i),t.appendChild(a)}}),fillReviewsHTML=((e=self.reviews)=>{const t=document.getElementById("reviews-container"),n=document.getElementById("reviews-list");if(fillSubmitReviewFormHTML(n),0===e.length){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}e.forEach(e=>{n.appendChild(createReviewHTML(e))})}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,n.className="review-name",n.title="reviewer's name",t.appendChild(n);const a=document.createElement("p"),r=new Date(e.createdAt).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});a.innerHTML=r,a.className="review-date",a.title="date when review was posted",t.appendChild(a);const i=document.createElement("p");i.innerHTML=`Rating: ${e.rating}`,i.className="review-rating",i.title="given rating",t.appendChild(i);const s=document.createElement("p");return s.innerHTML=e.comments,s.className="review-comments",s.title="comments from the reviewer",t.appendChild(s),t}),fillSubmitReviewFormHTML=((e,t=self.restaurant)=>{const n=document.createElement("li"),a=document.createElement("form");a.id="form-review",a.method="POST",a.setAttribute("aria-label","Add review for restaurant");const r=document.createElement("input");r.id="restaurant_id",r.name="restaurant_id",r.type="hidden",r.value=t.id,a.appendChild(r);const i=document.createElement("p");i.className="review-name";const s=document.createElement("label");s.innerHTML="*Name:",s.for="uName",s.title="reviewer's name",i.appendChild(s);const o=document.createElement("input");o.id="uName",o.name="name",o.placeholder="Your Name",o.setAttribute("aria-required","true"),o.setAttribute("aria-label","Your name"),s.appendChild(o),a.appendChild(i);const l=document.createElement("p"),c=(new Date).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});l.innerHTML=c,l.className="review-date",l.title="date when review is posted",a.appendChild(l);const d=document.createElement("p");d.className="review-rating";const m=document.createElement("label");m.innerHTML="Rating:";const u=document.createElement("select");u.name="rating";for(var p=1;p<=5;p++){const e=document.createElement("option");e.value=p,e.innerHTML=p,u.appendChild(e)}m.appendChild(u),d.appendChild(m),a.appendChild(d);const h=document.createElement("p");h.className="review-comments";const w=document.createElement("label");w.innerHTML="*Comments:";const v=document.createElement("textarea");v.name="comments",v.id="commentsText",v.setAttribute("aria-required","true"),v.setAttribute("aria-label","Additional comments for the review"),h.appendChild(w),h.appendChild(v),a.appendChild(h);const f=document.createElement("p"),g=document.createElement("button");g.id="submitBtn",g.type="submit",g.innerHTML="Submit Review!",g.value="Submit",g.setAttribute("aria-label","Submit review"),f.appendChild(g),a.appendChild(f),n.appendChild(a),e.appendChild(n),a.addEventListener("submit",function(e){e.preventDefault(),submitReview(a)})}),submitReview=(e=>{const t=new FormData(e),n={};let a=!1;if(t.forEach(function(e,t){const r=escape(e);""===r&&(showNotification(`Oh no! Something went wrong, please check ${t} field`),a=!0),n[t]=r}),n.rating=parseInt(n.rating),a)return;let r=e.parentNode.parentNode;const i=(new Date).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});n.createdAt=i,DBHelper._updateDB("newR",n),DBHelper._updateDB("reviews",n),n.name=unescape(n.name),n.comments=unescape(n.comments);let s=createReviewHTML(n);return navigator.serviceWorker.ready.then(e=>e.sync.register("send-reviews")).then(()=>{showNotification("Your review will be posted as soon as possible."),r.insertBefore(s,e.parentNode),r.removeChild(e.parentNode)}).catch(()=>{showNotification("Error")})}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb");resetBreadcrumb(t);const n=document.createElement("li");n.setAttribute("aria-current","page"),n.innerHTML=e.name,t.appendChild(n)}),resetBreadcrumb=(e=>{const t=e.children.length;for(let n=1;n<t;n++)e.removeChild(e.children.item(n))}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
