let restaurant,reviews;var map;document.addEventListener("DOMContentLoaded",e=>{DBHelper.registerServiceWorker(),this._toastsView=new Toast,fetchRestaurantFromURL()}),window.initMap=(()=>{self.restaurant&&(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:self.restaurant.latlng,scrollwheel:!1}),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))}),fetchRestaurantFromURL=(()=>{if(self.restaurant)return;const e=getParameterByName("id");e?DBHelper.fetchDataById("restaurants",e,(t,n)=>{self.restaurant=n,!t||n?DBHelper.fetchReviewsByRestaurantId(e,(e,t)=>{self.reviews=t.reverse(),e&&showNotification(e),fillRestaurantHTML(),Helper.lazyLoad()}):showNotification(t)}):showNotification("No restaurant id in URL")}),fillRestaurantHTML=((e=self.restaurant)=>{fillBreadcrumb();const t=document.getElementsByTagName("head")[0],n=document.createElement("meta");n.setAttribute("name","description"),n.setAttribute("content",`Detailed information about ${e.name}`),t.append(n);const a=document.getElementById("restaurant-name");a.innerHTML=e.name,a.title="restaurant name";const r=document.createElement("input");r.type="checkbox",r.name="favourite",r.value="favourite",r.id="favourite",r.checked=e.is_favorite,r.setAttribute("onchange","updateIsFavourite()");const i=document.createElement("label");i.setAttribute("for","favourite"),a.appendChild(r),a.appendChild(i);const o=document.getElementById("restaurant-address");o.innerHTML=e.address,o.title="restaurant address";const s=DBHelper.imageUrlForRestaurant(e,!0),l=document.getElementById("restaurant-img");l.className="restaurant-img",l.classList.add("lazy"),l.src=s,l.setAttribute("data-src",DBHelper.imageUrlForRestaurant(e)),l.setAttribute("data-srcset",DBHelper.imageSRCSetUrlsForRestaurant(e,["1x","2x"])),l.alt=e.photograph?DBHelper.getPhotoDescription(e):"no picture found";const d=document.getElementById("restaurant-cuisine");d.innerHTML=e.cuisine_type,d.title="restaurant cuisine type",e.operating_hours&&fillRestaurantHoursHTML(),fillSubmitReviewFormHTML(),fillReviewsHTML()}),updateIsFavourite=((e=self.restaurant)=>{const t=e.is_favorite?0:1;let n=new XMLHttpRequest;n.addEventListener("load",function(n){showNotification(`Restaurant is ${t?"favourite now :)":"not favourite anymore :("}`),e.is_favorite=!!t}),n.addEventListener("error",function(e){showNotification("Oops! Something went wrong. :(")}),n.open("PUT",window.location.href,!0),n.send(`is_favorite=${t}&restaurant_id=${e.id}`)}),showNotification=((e,t={buttons:["dismiss"]})=>{this._toastsView.create(e,t)}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,r.className="openhours-day",a.appendChild(r);const i=document.createElement("td");i.innerHTML=e[n],i.className="openhours-time",a.appendChild(i),t.appendChild(a)}}),fillReviewsHTML=((e=self.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h3");if(n.innerHTML="Reviews",t.appendChild(n),0===e.length){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const a=document.getElementById("reviews-list");e.forEach(e=>{a.appendChild(createReviewHTML(e))}),t.appendChild(a)}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,n.className="review-name",n.title="reviewer's name",t.appendChild(n);const a=document.createElement("p"),r=new Date(e.createdAt).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});a.innerHTML=r,a.className="review-date",a.title="date when review was posted",t.appendChild(a);const i=document.createElement("p");i.innerHTML=`Rating: ${e.rating}`,i.className="review-rating",i.title="given rating",t.appendChild(i);const o=document.createElement("p");return o.innerHTML=e.comments,o.className="review-comments",o.title="comments from the reviewer",t.appendChild(o),t}),fillSubmitReviewFormHTML=((e=self.restaurant)=>{const t=document.getElementById("reviews-list"),n=document.createElement("li"),a=document.createElement("form");a.id="form-review",a.method="POST",a.setAttribute("aria-label","Add review for restaurant");const r=document.createElement("input");r.id="restaurant_id",r.name="restaurant_id",r.type="hidden",r.value=e.id,a.appendChild(r);const i=document.createElement("p");i.className="review-name";const o=document.createElement("label");o.innerHTML="* Name:",o.for="uName",o.title="reviewer's name",i.appendChild(o);const s=document.createElement("input");s.id="uName",s.name="name",s.placeholder="Your Name",s.setAttribute("aria-required","true"),s.setAttribute("aria-label","Your name"),o.appendChild(s),a.appendChild(i);const l=document.createElement("p"),d=(new Date).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});l.innerHTML=d,l.className="review-date",l.title="date when review is posted",a.appendChild(l);const c=document.createElement("p");c.className="review-rating";const m=document.createElement("label");m.innerHTML="Rating:";const u=document.createElement("select");u.name="rating";for(var p=1;p<=5;p++){const e=document.createElement("option");e.value=p,e.innerHTML=p,u.appendChild(e)}m.appendChild(u),c.appendChild(m),a.appendChild(c);const h=document.createElement("p");h.className="review-comments";const w=document.createElement("label");w.innerHTML="* Comments:";const f=document.createElement("textarea");f.name="comments",f.id="commentsText",f.setAttribute("aria-required","true"),f.setAttribute("aria-label","Additional comments for the review"),h.appendChild(w),h.appendChild(f),a.appendChild(h);const v=document.createElement("p"),g=document.createElement("button");g.id="submitBtn",g.type="submit",g.innerHTML="Submit Review!",g.value="Submit",g.setAttribute("aria-label","Submit review"),v.appendChild(g),a.appendChild(v),n.appendChild(a),t.appendChild(n),a.addEventListener("submit",function(e){e.preventDefault(),submitReview(a)})}),submitReview=(e=>{const t=new FormData(e),n={};let a=!1;if(t.forEach(function(e,t){const r=escape(e);""===r&&(showNotification(`Oh no! Something went wrong, please check ${t} field`),a=!0),n[t]=r}),a)return;let r=e.parentNode.parentNode;const i=(new Date).toLocaleDateString("en-us",{month:"long",day:"numeric",year:"numeric"});n.createdAt=i,DBHelper._updateDB("new",n);let o=createReviewHTML(n);return navigator.serviceWorker.ready.then(e=>e.sync.register("send-reviews")).then(()=>{showNotification("Your review will be posted as soon as possible."),r.insertBefore(o,e.parentNode),r.removeChild(e.parentNode)}).catch(()=>{showNotification("Error")})}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.setAttribute("aria-current","page"),n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
